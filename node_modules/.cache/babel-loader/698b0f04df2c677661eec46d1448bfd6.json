{"ast":null,"code":"import _objectSpread from \"/Users/melodyvsl/Documents/GitHub/movie_react_app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/melodyvsl/Documents/GitHub/movie_react_app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/melodyvsl/Documents/GitHub/movie_react_app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melodyvsl/Documents/GitHub/movie_react_app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melodyvsl/Documents/GitHub/movie_react_app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melodyvsl/Documents/GitHub/movie_react_app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melodyvsl/Documents/GitHub/movie_react_app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melodyvsl/Documents/GitHub/movie_react_app/src/component/movies.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MoviesTable from './moviesTable';\nimport ListGroup from './common/listGroup';\nimport Pagination from './common/pagination';\nimport { getMovies, deleteMovie } from '../servises/fakeMovieService';\nimport { getGenres } from '../servises/fakeGenreService';\nimport { paginate } from '../utils/paginate';\nimport _ from 'lodash';\nimport SearchBox from './searchBox';\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4,\n      searchQuery: '',\n      selectedGenre: null,\n      sortColumn: {\n        path: 'title',\n        order: 'asc'\n      }\n    };\n\n    _this.handleDelete = function (movie) {\n      var movies = _this.state.movies.filter(function (m) {\n        return m._id !== movie._id;\n      });\n\n      _this.setState({\n        movies: movies\n      });\n\n      deleteMovie(movie._id);\n    };\n\n    _this.handleLike = function (movie) {\n      var movies = _toConsumableArray(_this.state.movies);\n\n      var index = movies.indexOf(movie);\n      movies[index] = _objectSpread({}, movies[index]);\n      movies[index].liked = !movies[index].liked;\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    _this.handleGenreSelect = function (genre) {\n      _this.setState({\n        selectedGenre: genre,\n        searchQuery: '',\n        currentPage: 1\n      });\n    };\n\n    _this.handleSearch = function (query) {\n      _this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n\n    _this.handleSort = function (sortColumn) {\n      _this.setState({\n        sortColumn: sortColumn\n      });\n    };\n\n    _this.getPagedData = function () {\n      var _this$state = _this.state,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage,\n          sortColumn = _this$state.sortColumn,\n          selectedGenre = _this$state.selectedGenre,\n          searchQuery = _this$state.searchQuery,\n          allMovies = _this$state.movies;\n      var filtered = allMovies;\n      if (searchQuery) filtered = allMovies.filter(function (m) {\n        return m.title.toLowerCase().startsWith(searchQuery.toLowerCase());\n      });else if (selectedGenre && selectedGenre._id) filtered = allMovies.filter(function (m) {\n        return m.genre._id === selectedGenre._id;\n      });\n\n      var sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      var movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var genres = [{\n        _id: '',\n        name: 'All Genres'\n      }].concat(_toConsumableArray(getGenres()));\n      this.setState({\n        movies: getMovies(),\n        genres: genres\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var count = this.state.movies.length;\n      var _this$state2 = this.state,\n          pageSize = _this$state2.pageSize,\n          currentPage = _this$state2.currentPage,\n          sortColumn = _this$state2.sortColumn,\n          searchQuery = _this$state2.searchQuery;\n      if (count === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"There are no movies in the database.\");\n\n      var _this$getPagedData = this.getPagedData(),\n          totalCount = _this$getPagedData.totalCount,\n          movies = _this$getPagedData.data;\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        items: this.state.genres,\n        selectedItem: this.state.selectedGenre,\n        onItemSelect: this.handleGenreSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/movies/new\",\n        className: \"btn btn-primary\",\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"New Movie\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Showing \", totalCount, \" movies in the database.\"), React.createElement(SearchBox, {\n        value: searchQuery,\n        onChange: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(MoviesTable, {\n        movies: movies,\n        sortColumn: sortColumn,\n        onLike: this.handleLike,\n        onDelete: this.handleDelete,\n        onSort: this.handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        itemsCount: totalCount,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPageChange: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default Movies;","map":{"version":3,"sources":["/Users/melodyvsl/Documents/GitHub/movie_react_app/src/component/movies.jsx"],"names":["React","Component","Link","MoviesTable","ListGroup","Pagination","getMovies","deleteMovie","getGenres","paginate","_","SearchBox","Movies","state","movies","genres","currentPage","pageSize","searchQuery","selectedGenre","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","title","toLowerCase","startsWith","sorted","orderBy","totalCount","length","data","name","count","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MoviesTable from './moviesTable';\nimport ListGroup from './common/listGroup';\nimport Pagination from './common/pagination';\nimport { getMovies, deleteMovie } from '../servises/fakeMovieService';\nimport { getGenres } from '../servises/fakeGenreService';\nimport { paginate } from '../utils/paginate';\nimport _ from 'lodash';\nimport SearchBox from './searchBox';\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: '',\n    selectedGenre: null,\n    sortColumn: { path: 'title', order: 'asc' },\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: '', name: 'All Genres' }, ...getGenres()];\n\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = movie => {\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n\n    deleteMovie(movie._id);\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: '', currentPage: 1 });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies,\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <Link to=\"/movies/new\" className=\"btn btn-primary\" style={{ marginBottom: 20 }}>\n            New Movie\n          </Link>\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}